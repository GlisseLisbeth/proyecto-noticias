{"version":3,"sources":["logo.svg","components/Header.jsx","components/Categoria.jsx","components/Formulario.jsx","components/Noticia.jsx","components/ListaNoticias.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Categoria","categoria","this","props","Component","Formulario","state","selected","handleChange","e","setState","target","value","nextProps","nextState","consultarNoticia","categoriaNoticias","id","onChange","map","index","key","Noticia","noticia","title","description","urlToImage","url","style","maxWidth","src","logo","alt","href","ListaNoticias","listaNoticias","App","a","urlApi","fetch","respuesta","json","noticias","articles","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a56d3ef4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\n\nconst Header = () => {\n  return(\n    <nav className=\"navbar navbar-dark bg-primary justify-content-center\">\n      <h1 className=\"text-light\">Noticias desde API</h1>\n    </nav>\n  )\n}\n\nexport default Header","import React, { Component } from \"react\";\r\n\r\nclass Categoria extends Component {\r\n  render() {\r\n    const {categoria} = this.props;\r\n    return (\r\n          <option \r\n          >{categoria}</option>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Categoria;\r\n","import React, { Component } from \"react\";\nimport Categoria from \"./Categoria\";\n\nclass Formulario extends Component {\n  state = {\n      selected: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({selected: e.target.value});\n  }  \n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      selected: state.selected\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState){\n    return (this.state.selected !== nextState.state)?nextProps.consultarNoticia(nextState.selected):null;\n  }\n\n  render() {\n    const { categoriaNoticias, selected } = this.props;\n   \n    return (\n      <form>\n        <div className=\"form-row justify-content-center\">\n          <div className=\"form-group col-md-4\">\n            <select \n              id=\"id-categoria\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n              value={selected}\n              >\n              {categoriaNoticias.map((categoria, index) => {\n                return <Categoria key={index} categoria={categoria} />;\n              })}\n            </select>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Formulario;\n","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nclass Noticia extends Component {\n \n  render() {\n    const {\n      title,\n      description,\n      urlToImage,\n      url\n    } = this.props.noticia;\n    return (\n      <div className=\"card\" style={{maxWidth: '18em'}}>\n        {\n        (urlToImage===null) ? <img className=\"card-img-top\" src={logo} alt=\"logo\"/> : <img className=\"card-img-top\" src={urlToImage} alt={title}/>}\n        <div className=\"card-body\">\n    <h5 className=\"card-title\">{title}</h5>\n    <p className=\"card-text\">{description}</p>\n        </div>\n        <div className=\"card-footer\">\n          <a \n            href={url}\n            className=\"btn btn-primary btn-lg active\"> \n            Ver noticia</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Noticia;","import React, { Component } from 'react';\nimport Noticia from './Noticia'\n\nclass ListaNoticias extends Component {\n  render() {\n    const {listaNoticias} = this.props;\n    return (\n      <div className=\"card-columns text-center\">\n         {listaNoticias.map((noticia, index)=>{\n              return (\n                <Noticia \n                  key={index}\n                  noticia={noticia} \n                />\n              )\n            })}\n      </div>\n    );\n  }\n}\n\nexport default ListaNoticias;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport Formulario from './components/Formulario'\nimport ListaNoticias from './components/ListaNoticias';\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listaNoticias: [],\n      categoriaNoticias: ['general','business','entertainment','health','science','sports','technology'],\n      selected: 'general'\n    }\n  }\n\n  componentDidMount() {\n    this.consultarNoticia(this.state.selected);\n  }\n  \n  consultarNoticia = async (selected) =>{\n    const urlApi = `https://newsapi.org/v2/top-headlines?country=mx&category=${selected}&apiKey=004381c512694d56be0d01dabee2b450`;\n    const respuesta = await fetch(urlApi);\n    const noticias = await respuesta.json();\n    this.setState({listaNoticias: noticias.articles})\n  }\n\n  render() {\n    const {categoriaNoticias, listaNoticias} = this.state;\n     return (\n      <div className=\"bg-dark\">\n        <Header/>\n        <section className=\"container bg-light\">\n          <br/>\n          <h4 className=\"text-center\">Encuentra noticias por categorias</h4>\n          <br/>\n          <Formulario \n            categoriaNoticias={categoriaNoticias}\n            consultarNoticia={this.consultarNoticia}\n          />\n          <br/>\n          <ListaNoticias listaNoticias={listaNoticias}></ListaNoticias>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}